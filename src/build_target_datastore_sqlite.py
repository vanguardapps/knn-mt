import numpy as np
from knn.knn_store_sqlite import KNNStoreSQLite


def main():
    store = KNNStoreSQLite(database="db/test_db.db")

    source_token_ids_available = np.array(
        [
            24537,
            166,
            248504,
            18498,
            248126,
            15544,
            15459,
            248219,
            248,
            70,
            1378,
            8162,
            248130,
            9,
            150992,
            227940,
            349,
            83302,
            175312,
            3287,
            482,
            8815,
            216045,
            248075,
            388,
            6098,
            248079,
            772,
            540,
            17932,
            7644,
            23744,
            351,
            63239,
            33024,
            452,
            1783,
            9903,
            2986,
            149624,
            202,
            5413,
            248080,
            108,
            1617,
            50416,
            14117,
            455,
            618,
            138463,
            11826,
            59,
            8852,
            56043,
            117953,
            2294,
            89015,
            3808,
            4055,
            496,
            220,
            1853,
            11560,
            200469,
            120704,
            48991,
            1085,
            811,
            311,
            4039,
            216679,
            3605,
            2469,
            33,
            9949,
            39733,
            92798,
            111318,
            5057,
            101339,
            82472,
            90694,
            468,
            280,
            61472,
            248078,
            8745,
            37625,
            824,
            2442,
            87,
            757,
            23344,
            1431,
            1548,
            53521,
            12307,
            7065,
            3573,
            246,
            126,
            7621,
            436,
            239574,
            24522,
            48071,
            1420,
            50017,
            1590,
            32408,
            13601,
            62098,
            65990,
            242466,
            2486,
            15753,
            2125,
            43068,
            2790,
            31494,
            41385,
            12516,
            70314,
            166173,
            76,
            8857,
            12603,
            12607,
            14015,
            15520,
            10527,
        ],
        dtype=np.int64,
    )
    encoder_input_ids = np.random.choice(
        source_token_ids_available, size=(2, 150), replace=True
    )
    encoder_last_hidden_state = np.random.random(size=(2, 150, 1024))

    store.build_target_datastore(
        encoder_input_ids=encoder_input_ids,
        encoder_last_hidden_state=encoder_last_hidden_state,
    )

    print('encoder_last_hidden_state.shape', encoder_last_hidden_state[0, 0:2])

    probs = store.search_target_datastore(
        decoder_last_hidden_state=encoder_last_hidden_state[0, 0:2],
        k=5,
        unfinished_sequences=np.array([1, 1], dtype=np.int64),
        pad_token_id=0,
        vocab_dim=300000,
        temperature=1,
        return_probs=True,
    )

    print('probs.shape', probs.shape)

    print('probs', probs[probs > 0])


if __name__ == "__main__":
    main()
